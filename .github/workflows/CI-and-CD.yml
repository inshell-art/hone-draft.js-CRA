name: CI/CD Pipeline

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_dispatch:

    
    jobs:
      dev-and-test:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
          - name: Setup Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '18'
            cache: 'npm'
            - name: Install Dependencies
            run: npm install
            - name: Run Linting
            run: npm run lint
            - name: Run Prettier
            run: npm run prettier
            - name: Run Type Checking
            run: npm run type-check
            - name: Run Tests
            run: npm test
            
            build-and-deploy:
              permissions:
                contents: read
                pages: write
                id-token: write
              
              concurrency:
                group: 'pages'
                cancel-in-progress: false
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: dev-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Ensure this matches the version used in dev-and-test
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci # Using npm ci for a clean install based on package-lock.json
      - name: Build Project
        run: npm run build # Make sure your project has a build script that outputs to a 'build' directory
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build' # Ensure this matches your build output directory
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
